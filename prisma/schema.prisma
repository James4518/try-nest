generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id        Int       @id @default(autoincrement())
  name      String    @unique(map: "name") @db.VarChar(10)
  password  String    @db.VarChar(64)
  createAt  DateTime? @default(dbgenerated("(now())")) @db.DateTime(0)
  updateAt  DateTime? @default(dbgenerated("(now())")) @db.DateTime(0)
  comment   comment[]
  moments   moment[]
}

model moment {
  id            Int      @id @default(autoincrement())
  content       String   @db.Text
  userId        Int
  visibility    String   @db.VarChar(8)
  viewCount     Int      @default(0)
  likeCount     Int      @default(0)
  collectCount  Int      @default(0)
  createAt      DateTime? @default(dbgenerated("(now())")) @db.DateTime(0)
  comments      comment[]
  author        user     @relation(fields: [userId], references: [id], onDelete: Cascade, map: "moment_ibfk_1")
  labels        moment_label[]

  @@index([userId], map: "userId")
}

model comment {
  id       Int      @id @default(autoincrement())
  content  String   @db.Text
  momentId Int
  userId   Int
  commentId     Int?
  createAt DateTime? @default(dbgenerated("(now())")) @db.DateTime(0)
  user     user     @relation(fields: [userId], references: [id], onDelete: Cascade, map: "comment_ibfk_2")
  moment   moment   @relation(fields: [momentId], references: [id], onDelete: Cascade, map: "comment_ibfk_1")
}

model label {
  id      Int      @id @default(autoincrement())
  name    String   @unique(map: "name") @db.VarChar(8)
  moments moment_label[]
}

model moment_label {
  momentId Int
  labelId  Int
  moment   moment @relation(fields: [momentId], references: [id], onDelete: Cascade, map: "moment_label_ibfk_1")
  label    label  @relation(fields: [labelId], references: [id], onDelete: Cascade, map: "moment_label_ibfk_2")

  @@id([momentId, labelId])
  @@index([labelId], map: "labelId")
  @@index([momentId], map: "momentId")
}
